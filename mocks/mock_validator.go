// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\Bartosz\GolandProjects\awesomeProject\models\validator.go
//
// Generated by this command:
//
//	mockgen -source=C:\Users\Bartosz\GolandProjects\awesomeProject\models\validator.go -destination=mocks/mock_validator .go -package=mocks
//

// Package mock_models is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSwiftValidator is a mock of SwiftValidator interface.
type MockSwiftValidator struct {
	ctrl     *gomock.Controller
	recorder *MockSwiftValidatorMockRecorder
	isgomock struct{}
}

// MockSwiftValidatorMockRecorder is the mock recorder for MockSwiftValidator.
type MockSwiftValidatorMockRecorder struct {
	mock *MockSwiftValidator
}

// NewMockSwiftValidator creates a new mock instance.
func NewMockSwiftValidator(ctrl *gomock.Controller) *MockSwiftValidator {
	mock := &MockSwiftValidator{ctrl: ctrl}
	mock.recorder = &MockSwiftValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSwiftValidator) EXPECT() *MockSwiftValidatorMockRecorder {
	return m.recorder
}

// Struct mocks base method.
func (m *MockSwiftValidator) Struct(s any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Struct", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Struct indicates an expected call of Struct.
func (mr *MockSwiftValidatorMockRecorder) Struct(s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Struct", reflect.TypeOf((*MockSwiftValidator)(nil).Struct), s)
}
